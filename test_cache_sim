#!/bin/bash
apps=/home/toby/Documents/Project/parsec/parsec-2.1/pkgs/apps


SHORT=s:fc:
LONG=compare,size:,simonly,offline,config:,coherence,l1size:,l2size:,cores:,l1assoc:,l2assoc:,output:
OPTS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
if [ $? != 0 ] ; then echo "Failed to parse options...exiting." >&2 ; exit 1 ; fi
eval set -- "$OPTS"

config=/home/toby/CLionProjects/cache-simulator/Config.txt
on=online
output=
outputFile=
simonly=false
size=simsmall
compare=false
coherence=
siminput=cachesimpipe
l1size=8K
l2size=8M
cores=2
l1assoc=8
l2assoc=16

while true ; do
  case "$1" in
    --compare )
      compare=true
      shift
      ;;
    -s | --size )
      size="$2"
      shift 2
      ;;
    --simonly )
      simonly=true
      on=offline
      siminput=memref-output.dat
      shift
      ;;
    -f | --offline )
       on=offline
       siminput=memref-output.dat
       shift
       ;;
     -c | --config )
      config="$2"
      shift 2
      ;;
      --coherence )
      coherence=-coherence
      shift
      ;;
    --l2size )
      l2size="$2"
      shift 2
      ;;
    --l1size )
      l1size="$2"
      shift 2
      ;;
    --cores )
      cores="$2"
      shift 2
      ;;
    --l1assoc )
      l1assoc="$2"
      shift 2
      ;;
    --l2assoc )
      l2assoc="$2"
      shift 2
      ;;
      --)
      shift
      break
      ;;
--output )
      outputFile="$2"
      output=-output
      shift 2
      ;;
      --)
      shift
      break
      ;;
      *)
	echo "error"
      exit 1
      ;;
  esac
done

echo $size
target=$1
shift
args=$*

fulltarget=$apps/$target/inst/amd64-linux.gcc.pre/bin/$target

runtimefolder=$apps/$target/run

benchinput=$apps/$target/inputs/input_$size.tar
echo $benchinput

cd $runtimefolder
tar xf $benchinput
if [ $compare == "true" ] 
then
	echo "running on DrCacheSim"
	drrun -root /home/toby/dynamoRIO -t drcachesim -L0I_size 0 -L1D_size $l1size -LL_size $l2size -L1D_assoc $l1assoc -LL_assoc $l2assoc -cores $cores -data_prefetcher none -- $fulltarget $args
fi
echo "running on simulator"
if [ $simonly == "false" ]
then
    tracer="drrun -root /home/toby/dynamoRIO -c /home/toby/CLionProjects/cache-simulator/tracer/cmake-build-debug/libmyclient.so $on -- $fulltarget $args"
    if [ $on == "online" ]
    then
	rm -f $siminput
	echo running online
         $tracer &
    else
        $tracer
    fi
fi
sleep .5
/home/toby/CLionProjects/cache-simulator/simulator/cmake-build-debug/simulator -$on $coherence $output $outputFile $config $runtimefolder/$siminput
